{"ast":null,"code":"var _jsxFileName = \"/home/uki-jaffna/Downloads/react-movie-search-app-master/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport MovieCard from './MovieCard';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_MOVIES_API_URL;\nconsole.log('API URL:', API_URL); // Debugging log\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async title => {\n    try {\n      const fullURL = `${API_URL}&s=${title}`;\n      console.log(`Fetching movies from: ${fullURL}`);\n      const response = await fetch(fullURL);\n\n      // Check if the response is JSON\n      const contentType = response.headers.get('Content-Type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('API did not return JSON');\n      }\n      const data = await response.json();\n      if (data.Response === \"True\") {\n        setMovies(data.Search);\n      } else {\n        console.error('OMDB API Error:', data.Error);\n        setMovies([]);\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      searchMovies(searchTerm);\n    }\n  };\n  useEffect(() => {\n    searchMovies('Batman'); // Fetch default movies on load\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pavi's MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: searchTerm ? \"No Movies Found!\" : \"Start by searching for a movie!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MovieCard","SearchIcon","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_MOVIES_API_URL","console","log","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","fullURL","response","fetch","contentType","headers","get","includes","Error","data","json","Response","Search","error","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyDown","src","alt","onClick","length","map","movie","imdbID","_c","$RefreshReg$"],"sources":["/home/uki-jaffna/Downloads/react-movie-search-app-master/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport MovieCard from './MovieCard';\n\nimport './App.css';\nimport SearchIcon from './search.svg';\n\nconst API_URL = process.env.REACT_APP_MOVIES_API_URL;\nconsole.log('API URL:', API_URL); // Debugging log\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const searchMovies = async (title) => {\n    try {\n      const fullURL = `${API_URL}&s=${title}`;\n      console.log(`Fetching movies from: ${fullURL}`);\n\n      const response = await fetch(fullURL);\n\n      // Check if the response is JSON\n      const contentType = response.headers.get('Content-Type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('API did not return JSON');\n      }\n\n      const data = await response.json();\n\n      if (data.Response === \"True\") {\n        setMovies(data.Search);\n      } else {\n        console.error('OMDB API Error:', data.Error);\n        setMovies([]);\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      searchMovies(searchTerm);\n    }\n  };\n\n  useEffect(() => {\n    searchMovies('Batman'); // Fetch default movies on load\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>Pavi's MovieLand</h1>\n      <div className=\"search\">\n        <input\n          placeholder=\"Search for movies\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <img\n          src={SearchIcon}\n          alt=\"search\"\n          onClick={() => searchMovies(searchTerm)}\n        />\n      </div>\n\n      {movies?.length > 0 ? (\n        <div className=\"container\">\n          {movies.map((movie) => (\n            <MovieCard key={movie.imdbID} movie={movie} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"empty\">\n          <h2>{searchTerm ? \"No Movies Found!\" : \"Start by searching for a movie!\"}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}